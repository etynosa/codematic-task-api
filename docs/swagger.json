{
    "openapi": "3.0.0",
    "info": {
      "title": "Task Management API",
      "description": "RESTful API for managing tasks with authentication",
      "version": "1.0.0",
      "contact": {
        "email": "example@example.com"
      }
    },
    "servers": [
      {
        "url": "http://localhost:3000/api/v1",
        "description": "Development server"
      }
    ],
    "tags": [
      {
        "name": "Auth",
        "description": "Authentication endpoints"
      },
      {
        "name": "Tasks",
        "description": "Task management endpoints"
      }
    ],
    "paths": {
      "/auth/register": {
        "post": {
          "tags": ["Auth"],
          "summary": "Register a new user",
          "description": "Creates a new user account",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegister"
                },
                "example": {
                  "name": "John Doe",
                  "email": "john@example.com",
                  "password": "password123"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": ["Auth"],
          "summary": "Login user",
          "description": "Authenticates a user and returns a token",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                },
                "example": {
                  "email": "john@example.com",
                  "password": "password123"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid credentials",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/auth/me": {
        "get": {
          "tags": ["Auth"],
          "summary": "Get current user",
          "description": "Returns the currently authenticated user",
          "security": [{ "bearerAuth": [] }],
          "responses": {
            "200": {
              "description": "Current user data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/tasks": {
        "get": {
          "tags": ["Tasks"],
          "summary": "Get all tasks",
          "description": "Returns all tasks for the authenticated user",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "query",
              "name": "status",
              "schema": {
                "type": "string",
                "enum": ["Pending", "Completed"]
              },
              "description": "Filter tasks by status"
            },
            {
              "in": "query",
              "name": "priority",
              "schema": {
                "type": "string",
                "enum": ["Low", "Medium", "High"]
              },
              "description": "Filter tasks by priority"
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number"
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "integer",
                "default": 10
              },
              "description": "Number of items per page"
            }
          ],
          "responses": {
            "200": {
              "description": "List of tasks",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TaskListResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": ["Tasks"],
          "summary": "Create a new task",
          "description": "Creates a new task for the authenticated user",
          "security": [{ "bearerAuth": [] }],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCreate"
                },
                "example": {
                  "title": "Complete project documentation",
                  "description": "Finish writing the API documentation",
                  "dueDate": "2025-03-20T00:00:00.000Z",
                  "priority": "High",
                  "status": "Pending"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Task created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/{id}": {
        "get": {
          "tags": ["Tasks"],
          "summary": "Get a single task",
          "description": "Returns a specific task by ID",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "Task ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Task details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Task not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["Tasks"],
          "summary": "Update a task",
          "description": "Updates a specific task by ID",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "Task ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskUpdate"
                },
                "example": {
                  "title": "Updated project documentation",
                  "status": "Completed"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Task updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Task not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["Tasks"],
          "summary": "Delete a task",
          "description": "Deletes a specific task by ID",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "Task ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Task deleted successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "statusCode": {
                        "type": "integer",
                        "example": 200
                      },
                      "data": {
                        "type": "object"
                      },
                      "message": {
                        "type": "string",
                        "example": "Task deleted successfully"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Task not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "UserRegister": {
          "type": "object",
          "required": ["name", "email", "password"],
          "properties": {
            "name": {
              "type": "string",
              "description": "User full name"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "User email address"
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "User password"
            }
          }
        },
        "UserLogin": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "User email address"
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "User password"
            }
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "User ID"
            },
            "name": {
              "type": "string",
              "description": "User full name"
            },
            "email": {
              "type": "string",
              "description": "User email address"
            }
          }
        },
        "AuthResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "statusCode": {
              "type": "integer",
              "example": 200
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                },
                "token": {
                  "type": "string",
                  "description": "JWT token"
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Login successful"
            }
          }
        },
        "UserResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "statusCode": {
              "type": "integer",
              "example": 200
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "message": {
              "type": "string",
              "example": "User information retrieved successfully"
            }
          }
        },
        "TaskCreate": {
          "type": "object",
          "required": ["title", "dueDate"],
          "properties": {
            "title": {
              "type": "string",
              "description": "Task title"
            },
            "description": {
              "type": "string",
              "description": "Task description"
            },
            "dueDate": {
              "type": "string",
              "format": "date-time",
              "description": "Task due date"
            },
            "priority": {
              "type": "string",
              "enum": ["Low", "Medium", "High"],
              "default": "Medium",
              "description": "Task priority"
            },
            "status": {
              "type": "string",
              "enum": ["Pending", "Completed"],
              "default": "Pending",
              "description": "Task status"
            }
          }
        },
        "TaskUpdate": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Task title"
            },
            "description": {
              "type": "string",
              "description": "Task description"
            },
            "dueDate": {
              "type": "string",
              "format": "date-time",
              "description": "Task due date"
            },
            "priority": {
              "type": "string",
              "enum": ["Low", "Medium", "High"],
              "description": "Task priority"
            },
            "status": {
              "type": "string",
              "enum": ["Pending", "Completed"],
              "description": "Task status"
            }
          }
        },
        "Task": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Task ID"
            },
            "title": {
              "type": "string",
              "description": "Task title"
            },
            "description": {
              "type": "string",
              "description": "Task description"
            },
            "dueDate": {
              "type": "string",
              "format": "date-time",
              "description": "Task due date"
            },
            "priority": {
              "type": "string",
              "enum": ["Low", "Medium", "High"],
              "description": "Task priority"
            },
            "status": {
              "type": "string",
              "enum": ["Pending", "Completed"],
              "description": "Task status"
            },
            "user": {
              "type": "string",
              "description": "User ID who owns the task"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Task creation date"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Task last update date"
            }
          }
        },
        "TaskResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "statusCode": {
              "type": "integer",
              "example": 200
            },
            "data": {
              "type": "object",
              "properties": {
                "task": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Task retrieved successfully"
            }
          }
        },
        "TaskListResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "statusCode": {
              "type": "integer",
              "example": 200
            },
            "data": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                },
                "count": {
                  "type": "integer",
                  "example": 5
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Tasks retrieved successfully"
            },
            "pagination": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 20
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "limit": {
                  "type": "integer",
                  "example": 10
                },
                "pages": {
                  "type": "integer",
                  "example": 2
                },
                "next": {
                  "type": "integer",
                  "example": 2
                },
                "prev": {
                  "type": "integer",
                  "example": null
                }
              }
            }
          }
        },
        "ErrorResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "error": {
              "type": "string",
              "example": "Resource not found"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "example": "email"
                  },
                  "message": {
                    "type": "string",
                    "example": "Email is required"
                  }
                }
              }
            }
          }
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }